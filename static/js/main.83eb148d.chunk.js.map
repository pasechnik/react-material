{"version":3,"sources":["App2.tsx","theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","App2","useTheme","classes","useGlobalOpen","open","setOpen","className","Drawer","variant","anchor","paper","IconButton","onClick","direction","Divider","List","to","primary","icon","clsx","RoutesContainer","createMuiTheme","palette","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"ghBAuBMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,WAAYL,EAAMM,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQR,EAAMM,YAAYE,OAAOC,MACjCC,SAAUV,EAAMM,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OAdS,IAcT,OACLC,WAfc,IAgBdT,WAAYL,EAAMM,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQR,EAAMM,YAAYE,OAAOO,QACjCL,SAAUV,EAAMM,YAAYI,SAASM,kBAGzCC,WAAY,CACVC,YAAalB,EAAMmB,QAAQ,IAE7BC,KAAM,CACJjB,QAAS,QAEXkB,OAAQ,CACNR,MA5Bc,IA6BdS,WAAY,GAEdC,YAAa,CACXV,MAhCc,KAkChBW,aAAa,aACXrB,QAAS,OACTsB,WAAY,SACZC,QAAS1B,EAAMmB,QAAQ,EAAG,IAEvBnB,EAAM2B,OAAOC,QALN,CAMVC,eAAgB,aAElBC,QAAS,CACPC,SAAU,EACVL,QAAS1B,EAAMmB,QAAQ,GACvBd,WAAYL,EAAMM,YAAYC,OAAO,SAAU,CAC7CC,OAAQR,EAAMM,YAAYE,OAAOC,MACjCC,SAAUV,EAAMM,YAAYI,SAASC,gBAEvCG,YAjDc,KAmDhBkB,aAAc,CACZ3B,WAAYL,EAAMM,YAAYC,OAAO,SAAU,CAC7CC,OAAQR,EAAMM,YAAYE,OAAOO,QACjCL,SAAUV,EAAMM,YAAYI,SAASM,iBAEvCF,WAAY,QAuDHmB,EAlDkC,WAC/C,IAAMjC,EAAQkC,cACRC,EAAUrC,IAFkD,EAG1CsC,cAH0C,mBAG3DC,EAH2D,KAGrDC,EAHqD,KAQlE,OACE,yBAAKC,UAAWJ,EAAQjC,MACtB,kBAAC,IAAD,MACA,kBAACsC,EAAA,EAAD,CACED,UAAWJ,EAAQd,OACnBoB,QAAQ,aACRC,OAAO,OACPL,KAAMA,EACNF,QAAS,CACPQ,MAAOR,EAAQZ,cAGjB,yBAAKgB,UAAWJ,EAAQX,cACtB,kBAACoB,EAAA,EAAD,CAAYC,QAfM,kBAAYP,GAAQ,KAgBf,QAApBtC,EAAM8C,UAAsB,kBAAC,IAAD,MAAsB,kBAAC,IAAD,QAGvD,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KAEE,kBAAC,IAAD,CAAcC,GAAG,QAAQC,QAAQ,OAAOC,KAAM,kBAAC,IAAD,QAC9C,kBAAC,IAAD,CAAcF,GAAG,WAAWC,QAAQ,gBAAgBC,KAAM,kBAAC,IAAD,SAE5D,kBAACJ,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAcC,GAAG,SAASC,QAAQ,QAAQC,KAAM,kBAAC,IAAD,QAChD,kBAAC,IAAD,CAAcF,GAAG,YAAYC,QAAQ,WAAWC,KAAM,kBAAC,IAAD,QACtD,kBAAC,IAAD,CAAcF,GAAG,UAAUC,QAAQ,SAASC,KAAM,kBAAC,IAAD,UAGtD,0BACEZ,UAAWa,YAAKjB,EAAQL,QAAT,eACZK,EAAQH,aAAeK,KAG1B,yBAAKE,UAAWJ,EAAQX,eACxB,kBAAC6B,EAAA,EAAD,S,2BCzGOrD,EAjBDsD,YAAe,CAC3BC,QAAS,CACPL,QAAS,CACPM,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAMG,IAAIC,MAEZC,WAAY,CACVC,QAAS,W,QCNfC,IAASC,OACP,kBAACC,EAAA,EAAD,CAAejE,MAAOA,GAEpB,kBAACkE,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,cAAc,Y","file":"static/js/main.83eb148d.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { RoutesContainer } from 'routes/RoutesContainer';\nimport { useGlobalOpen } from 'hooks/menu';\nimport { CustomAppBar } from 'components/custom/AppBar';\nimport { ListItemLink } from 'components/ListLink';\nimport HomeIcon from '@material-ui/icons/Home';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TodayIcon from '@material-ui/icons/Today';\nimport ListIcon from '@material-ui/icons/List';\n// import HelpIcon from '@material-ui/icons/Help';\n// import StorageIcon from '@material-ui/icons/Storage';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }),\n);\n\nexport const App2: React.FunctionComponent<{}> = (): JSX.Element => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const [open, setOpen] = useGlobalOpen();\n\n  // const handleDrawerOpen = (): void => setOpen(true);\n  const handleDrawerClose = (): void => setOpen(false);\n\n  return (\n    <div className={classes.root}>\n      <CustomAppBar />\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {/* <ListItemLink to=\"/\" primary=\"Home\" icon={<HomeIcon />} /> */}\n          <ListItemLink to=\"/home\" primary=\"Home\" icon={<HomeIcon />} />\n          <ListItemLink to=\"/courses\" primary=\"React Courses\" icon={<AppsIcon />} />\n        </List>\n        <Divider />\n        <List>\n          <ListItemLink to=\"/about\" primary=\"About\" icon={<InfoIcon />} />\n          <ListItemLink to=\"/calendar\" primary=\"Calendar\" icon={<TodayIcon />} />\n          <ListItemLink to=\"/topics\" primary=\"Topics\" icon={<ListIcon />} />\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <RoutesContainer />\n      </main>\n    </div>\n  );\n};\n\nexport default App2;\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n// import App from './App';\nimport App2 from './App2';\nimport theme from './theme';\nimport { HashRouter as Router } from 'react-router-dom';\n// import { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <Router>\n      <App2 />\n    </Router>\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}